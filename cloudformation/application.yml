---
AWSTemplateFormatVersion: 2010-09-09
# Parameters provided inline with default values
Parameters:
  awsRegion:
    Description: Provided AWSRegion
    Type: String
    Default: us-east-1
  cidrBlock:
    Description: Provided cidr block
    Type: String
    Default: 10.0.0.0/16
  subnetCidrBlock:
    Description: Provided AWSRegion
    Type: String
    Default: 10.0.0.0/16
  vpcName:
    Description: Provided Vpc Name
    Type: String
    Default: bajaj-m-vpc
  ec2Size:
    Description: Provided EC2 instance size
    Type: String
    Default: TBD
  rdsSize:
    Description: Provided RDS instance size
    Type: String
    Default: TBD
  rdsPublicAccess:
    Description: Provided RDS accesibility
    Type: Boolean
    Default: false
  amiId:
    Description: Ami id provided
    Type: String
    Default: TBD
# Resources block
Resources:
  myVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref cidrBlock
      Tags:
        - Key: Name
          Value: !Ref vpcName
  # Subnets
  subnet1: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref awsRegion
      CidrBlock: !Select [ 0, !Cidr [ !Ref subnetCidrBlock, 3, 8 ]]
      VpcId: !Ref myVpc
      Tags:
        - Key: Name
          Value: !Join ["-",[!Ref vpcName,!Ref awsRegion,subnet1]]
  subnet2: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref awsRegion
      CidrBlock: !Select [ 1, !Cidr [ !Ref subnetCidrBlock, 2, 8 ]]
      VpcId: !Ref myVpc
      Tags:
        - Key: Name
          Value: !Join ["-",[!Ref vpcName,!Ref awsRegion,subnet2]]
  subnet3: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 3
        - Fn::GetAZs: !Ref awsRegion
      CidrBlock: !Select [ 2, !Cidr [ !Ref subnetCidrBlock, 3, 8 ]]
      VpcId: !Ref myVpc
      Tags:
        - Key: Name
          Value: !Join ["-",[!Ref vpcName,!Ref awsRegion,subnet3]]
  # Internet Gateway
  internetGateway:
    Type: AWS::EC2::InternetGateway
  # Attaching gateway to VPC
  attachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVpc
      InternetGatewayId: !Ref internetGateway
  # Route table
  routeTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVpc
      Tags:
        - Key: Name
          Value: !Join ["-",[!Ref vpcName,!Ref awsRegion,route-table]]
  # Attaching subnets to route table
  subnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref subnet1
      RouteTableId: !Ref routeTable
  subnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref subnet2
      RouteTableId: !Ref routeTable
  subnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref subnet3
      RouteTableId: !Ref routeTable
  # Public Route
  publicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref routeTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref internetGateway
  # Application Security Group
  applicationSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: applicationSecurityGroup
      GroupDescription: Allow http/https, ssh and trafic to 8080
      VpcId: !Ref myVpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: ssh
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
    Tags:
      - Key: Name
        Value: application-security-group
  # Database Security Group
  databaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref myVpc
      GroupDescription: Security group allowing ingress for database access to the application..
      GroupName: databaseSecurityGroup
  # inbound rule connecting application to database
  inboundRule:  
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupName: applicationSecurityGroup
      GroupName: databaseSecurityGroup
  # S3 Bucket
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - Id: STANDARD_IA_RULE
          Status: Enabled
          Transitions:
            - TransitionInDays: '30'
              StorageClass: STANDARD_IA
      Tags:
        - Key: Name
          Value: !Join ["-",[!Ref vpcName,!Ref awsRegion,s3-bucket]]
  # IAM Policy
  iamPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: WebAppS3
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: !Join [":", [s3,!Ref s3Bucket]]
            Resource:
              - !Join ["",[arn:aws:s3:::,!Ref s3Bucket]]
                !Join ["",[arn:aws:s3:::,!Ref s3Bucket,/*]]
  # IAM Role
  iamRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: Json
      Description: Role for EC2 instance to access S3 bucket
      Policies: !Ref iamPolicy
      RoleName: EC2-CSYE6225
      Tags: 
        - Key: Name
        Value: ec2-iam-role          
  # RDS Instance
  rdsInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: MySQL
      DBInstanceClass: db.t3.micro
      MultiAZ: false
      DBInstanceIdentifier: csye6225-spring2020
      MasterUsername: dbuser
      MasterUserPassword: Manorath96!
      DBSubnetGroupName: !Ref subnet3
      PubliclyAccessible: false
      DBName: csye6225
      VPCSecurityGroups: !Ref databaseSecurityGroup
  # EC2 Instance
  ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref amiId
      

